server:
  # This is the name following the server:port
  contextPath: /sentinel-auth-server
  # The port on which the AuthServer will listen
  port: 8081

# Details about the database server where the oauth DDL and DML was run:
oauthdb:
  jdbc:
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/oauth2db
    user: oauth2user
    pass: password

# Details about the database server User info lives:
userdb:
  jdbc:
    driverClassName: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/customdb
    user: customuser
    pass: password


# Note the below queries can be any queries so long as the data in the
# SELECT list and WHERE clause is retained.
query:
    # This query returns the username and password, given a username
    usersByUsername: SELECT username, password, enabled FROM user WHERE username=?

    # This query returns username and authorities, given a username
    authoritiesByUsername: SELECT username, authority FROM authorities WHERE username=?

    # This query can be used to return ANY data from the customdb so long as the following rules are followed:
    # The SELECT list should contain at least two columns labeled 'key' and 'value'. If other elements  exist in
    # the SELECT list, they will be ignored.
    # The WHERE clause MUST be as shown below. The username must be supplied by the caller of the query.
    additionalInfoQuery: SELECT 'role' key, role_name value FROM USER \
                         INNER JOIN user_role ON user.id = user_role.user_id \
                         INNER JOIN role ON user_role.role_id = role.id
                         WHERE user.username = ?

jwt:
  accessTokenValidityInSeconds: 36000
  refreshTokenValidityInSeconds: 360000
